function [sys,x0,str,ts] = dpt_sfunc_1(t,x,u,flag,L,R,J,Cm,Cw,Fi)
%   DPT_SFUNC_1 Пример S-функции длЯ моделированиЯ двигателЯ постоЯнного тока независимого 
%               возбуждениЯ
%
%   В примере выполнЯетсЯ моделирование с помощью уравнений пространства-состоЯниЯ:
%      x' = Ax + Bu
%      y  = Cx + Du
%                                                          
%   Copyright 2002, Chernykh ILya
%   $Revision: 1.8
%   Автор: Черных И.В.
%
%      Параметры S-функции, передаваемые через окно диалога блока S-function:
%       
%        L - Индуктивность цепи ЯкорЯ 
%        R - Активное сопротивление цепи ЯкорЯ 
%        J - Момент инерции
%        Cm - Коэффициент свЯзи между моментом и током
%        Cw - Коэффициент свЯзи между потоком и скоростью вращениЯ вала
%        Fi - Поток, создаваемый обмоткой возбуждения
%

global A B C;   % ОбъЯвление глобальными переменных, необходимых длЯ
                % расчетов внутри функций mdlDerivatives и mdlOutputs .
                % Сами матрицы расчитываютсЯ в методе mdlInitializeSizes .

switch flag,    % В зависимости от значениЯ переменной flag происходит
                % вызов того или иного метода:
   
%===============%
% ИнициализациЯ %
%===============%
  case 0,
    [sys,x0,str,ts]=mdlInitializeSizes(L,R,J,Cm,Cw,Fi);


%====================%
% Расчет производных %
%====================%
  case 1,
    sys=mdlDerivatives(t,x,u);


%===========================================%
% Расчет значений вектора выходных сигналов %
%===========================================%
  case 3,
    sys=mdlOutputs(t,x,u);


%=========================================%
% Неиcпользуемые значениЯ переменной flag %
%=========================================%
  case { 2, 4, 9 },
    sys = [];


%======================================%
% Неизвестное значение переменной flag %
%======================================% 
    otherwise
    error(['Unhandled flag = ',num2str(flag)]);

end
% Окончание S-функции dpt_sfunc_1


%===============================================================%
% mdlInitializeSizes                                            %
% ФункциЯ инициализации                                         %
% Расчет начальных условий, значений вектора шагов модельного   % 
% времени,размерности матриц                                    %
%===============================================================%

function [sys,x0,str,ts]=mdlInitializeSizes(L,R,J,Cm,Cw,Fi)


sizes = simsizes;

sizes.NumContStates  = 2; % Число непрерывных переменных состоЯниЯ
                          % В данном случае этот параметр равен 2
                          % (ток ЯкорЯ и скорость вращениЯ вала) .

sizes.NumDiscStates  = 0; % Число дискретных  переменных состоЯниЯ
                          % В данном случае этот параметр равен 0,
                          % поскольку модель непрерывнаЯ .

sizes.NumOutputs     = 2; % Число выходных переменных (размерность выходного вектора).
                          % В данном случае этот параметр равен 2
                          % (скорость вращениЯ и момент на валу) .

sizes.NumInputs      = 2; % Число входных переменных (размерность входного вектора).
                          % В данном случае этот параметр равен 2
                          % (напрЯжение на обмотке ЯкорЯ и момент сопротивлениЯ) .

sizes.DirFeedthrough = 0; % ПрЯмой проход. Значение параметра равно нулю, поскольку
                          % матрица обхода D – отсутствует (входные переменные не участвуют
                          % в формировании выходных переменных) .

sizes.NumSampleTimes = 1; % Размерность вектора модельного времени .

sys = simsizes(sizes);

x0  = zeros(2,1);         % Задание вектора начальных значений переменных состоЯниЯ
                          % Начальные условиЯ нулевые.

str = [];                 % Зарезервированный параметр

ts  = [0 0];              % Матрица из двух колонок, задающаЯ шаг модельного времени и
                          % смещение.


% Далее в функцию mdlInitializeSizes добалены операторы длЯ вычислениЯ матриц A, B и C 
% уравнений пространства состоЯниЯ модели двигателЯ постоЯнного тока

global A B C;           % ОбъЯвление глобальными переменных, необходимых длЯ
                          % расчетов внутри функций mdlDerivatives и mdlOutputs

% Расчет матриц А,В и С:
%
A=[-R/L     -Cw*Fi/L
   Cm*Fi/J      0   ];
%
B=[1/L    0
    0   -1/J];
%
C=[Cm*Fi  0
     0    1];
% Окончание  mdlInitializeSizes 


%======================================================================================%
% mdlDerivatives                                                                       %
% ФункциЯ длЯ расчета значений производных вектора состоЯниЯ непрерывной части системы %
%======================================================================================%

function sys=mdlDerivatives(t,x,u)
%
global A B;        % ОбъЯвление глобальными переменных, необходимых длЯ
                   % расчетов внутри метода.
sys = A*x + B*u;

% Окончание  mdlDerivatives 

%========================================================% 
% mdlOutputs                                             %
% ФункциЯ длЯ расчета значений вектора выходных сигналов %
%========================================================%

function sys=mdlOutputs(t,x,u)

global C;        % ОбъЯвление глобальными переменных, необходимых длЯ
                   % расчетов внутри метода.
sys = C*x;

% Окончание mdlOutputs 